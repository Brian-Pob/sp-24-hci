/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SearchResultsLazyImport = createFileRoute('/search-results')()
const SearchLazyImport = createFileRoute('/search')()
const SavedLazyImport = createFileRoute('/saved')()
const CreateLazyImport = createFileRoute('/create')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const SearchResultsLazyRoute = SearchResultsLazyImport.update({
  path: '/search-results',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/search-results.lazy').then((d) => d.Route),
)

const SearchLazyRoute = SearchLazyImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search.lazy').then((d) => d.Route))

const SavedLazyRoute = SavedLazyImport.update({
  path: '/saved',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/saved.lazy').then((d) => d.Route))

const CreateLazyRoute = CreateLazyImport.update({
  path: '/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/create.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      preLoaderRoute: typeof CreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/saved': {
      preLoaderRoute: typeof SavedLazyImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/search-results': {
      preLoaderRoute: typeof SearchResultsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRoute,
  AboutLazyRoute,
  CreateLazyRoute,
  SavedLazyRoute,
  SearchLazyRoute,
  SearchResultsLazyRoute,
])

/* prettier-ignore-end */
